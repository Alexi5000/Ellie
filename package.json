{
  "name": "ellie-voice-receptionist",
  "version": "1.0.0",
  "description": "Voice-enabled AI legal assistant with Docker containerization",
  "scripts": {
    "test": "npm run test:setup && jest",
    "test:setup": "bash scripts/setup-test-env.sh",
    "test:setup-windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-test-env.ps1",
    "test:integration": "npm run test:setup && jest tests/docker-integration.test.js --testTimeout=180000",
    "test:production": "npm run test:setup && jest tests/production-deployment.test.js --testTimeout=60000",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:all": "npm run test:backend && npm run test:frontend && npm run test:integration",
    "docker:up": "cd docker && docker-compose up --build",
    "docker:down": "cd docker && docker-compose down",
    "docker:prod": "cd docker && docker-compose -f docker-compose.prod.yml up --build",
    "docker:verify": "cd docker && powershell -ExecutionPolicy Bypass -File verify-docker-config.ps1",
    "docker:test": "cd docker && powershell -ExecutionPolicy Bypass -File docker-deployment-test.ps1",
    "ssl:setup": "cd docker && bash ssl-setup.sh",
    "ssl:setup-windows": "cd docker && powershell -ExecutionPolicy Bypass -File ssl-setup.ps1"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "axios": "^1.6.0",
    "ws": "^8.14.0"
  },
  "jest": {
    "testEnvironment": "node",
    "testTimeout": 120000,
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testMatch": [
      "**/tests/**/*.test.js"
    ]
  },
  "keywords": [
    "ai",
    "voice",
    "legal",
    "assistant",
    "docker",
    "nginx",
    "nodejs",
    "react"
  ],
  "author": "Ellie Voice Receptionist Team",
  "license": "MIT"
}