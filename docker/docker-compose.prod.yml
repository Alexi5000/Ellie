version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://your-domain.com
      - REACT_APP_SOCKET_URL=https://your-domain.com
    restart: unless-stopped
    networks:
      - ellie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CORS_ORIGIN=https://your-domain.com
      - REDIS_URL=redis://redis:6379
    env_file:
      - ../backend/.env.production
    restart: unless-stopped
    networks:
      - ellie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10
    restart: unless-stopped
    networks:
      - ellie-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-production.conf:/etc/nginx/nginx.conf:ro
      - ./server-common.conf:/etc/nginx/conf.d/server-common.conf:ro
      # SSL certificates (uncomment and configure for production)
      # - ./ssl/certs:/etc/ssl/certs:ro
      # - ./ssl/private:/etc/ssl/private:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ellie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Monitoring service (optional)
  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ellie-network

networks:
  ellie-network:
    driver: bridge

volumes:
  prometheus_data:
  redis_data: